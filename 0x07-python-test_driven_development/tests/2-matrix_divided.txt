>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[2, 4, 6], [3, 5, 7]], 4)
[[0.5, 1.0, 1.5], [0.75, 1.25, 1.75]]
>>> matrix_divided([[20, 40, 60], [30, 50, 70]], 4)
[[5.0, 10.0, 15.0], [7.5, 12.5, 17.5]]
>>> matrix_divided([[2, 4, 6], [3, 5, 7]], -4)
[[-0.5, -1.0, -1.5], [-0.75, -1.25, -1.75]]
>>> matrix_divided([[2, 4, 6], [3, 5, 7]], 2147483647)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
>>> matrix_divided(([1, 2, 3], [4, 5, 6]), 1)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided(["string", [1, 2, 3]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats
>>> matrix_divided([[1, 2, 3, 4], [5, 6, 7]], 1)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size
>>> matrix_divided([[1, 2, 3], [5, 6, 7]], "str")
Traceback (most recent call last):
...
TypeError: div must be a number
>>> matrix_divided([[1, 2, 3], [5, 6, 7]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero
>>> matrix_divided([[1, 2, 3], [5, 6, 7]], float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
>>> matrix_divided([[1, 2, 3], [5, 6, 7]])#doctest: +IGNORE_EXCEPTION_DETAIL
[[1, 2, 3], [5, 6, 7]]
>>> matrix_divided()#doctest: +IGNORE_EXCEPTION_DETAIL
Traceback (most recent call last):
TypeError:
